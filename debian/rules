#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

DEB_SOURCE_PACKAGE=$(strip $(shell egrep '^Source: ' debian/control | cut -f 2 -d ':'))

# see FEATURE AREAS in dpkg-buildflags(1)
#export DEB_BUILD_MAINT_OPTIONS = hardening=+all

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed

DISTRI=stretch
MAJREL=ocata

# prepare for new major release
new-majrel: 
	@ if [ "$(DEB_SOURCE_PACKAGE)" = "os-requirements-$(MAJREL)" ]; then \
		echo 'set MAJREL in debian/rules to new release name (current: $(MAJREL))' ; exit 1 ;\
	  fi
	git checkout master -b debian/$(DISTRI)-$(MAJREL)
	git remote add upstream  https://git.openstack.org/openstack/requirements.git
	git fetch --all
	git merge upstream/stable/$(MAJREL) --allow-unrelated-histories -m 'initial merge of $(MAJREL)'
	rm -f debian/changelog debian/*.install debian/gbp.conf
	sed 's/__MAJREL__/$(MAJREL)/g' debian/gbp.conf.in |sed 's/__DISTRI__/$(DISTRI)/g'   > debian/gbp.conf
	sed 's/__MAJREL__/$(MAJREL)/g' debian/update.sh.in |sed 's/__DISTRI__/$(DISTRI)/g' > debian/update.sh
	chmod +x debian/update.sh
	sed 's/__MAJREL__/$(MAJREL)/' debian/control.in                                     > debian/control 
	sed 's/__MAJREL__/$(MAJREL)/' debian/os-requirements-builddep.install.in            > debian/os-requirements-$(MAJREL)-builddep.install
	sed 's/__MAJREL__/$(MAJREL)/' debian/os-requirements-dep.install.in                 > debian/os-requirements-$(MAJREL)-dep.install
	sed 's/__MAJREL__/$(MAJREL)/' debian/os-requirements-pipcache.install.in            > debian/os-requirements-$(MAJREL)-pipcache.install
	dch --distribution unstable --create --package os-requirements-$(MAJREL) --newversion 0.$(MAJREL).0 'initial for openstack $(MAJREL)'
	git add .
	git commit -m 'add generated inital debian files'
	git tag debian/0.$(MAJREL).0 -m 'initial $(MAJREL) release'



PIPINSTDIR=$(CURDIR)/debian/os-requirements-$(MAJREL)-pipcache/usr/share/os-requirements-$(MAJREL)-pipcache

%:
	dh $@ 

override_dh_auto_clean:
override_dh_auto_test:
override_dh_auto_build:
override_dh_auto_install:
	mkdir -p  $(PIPINSTDIR)
	cp upper-constraints.txt $(PIPINSTDIR)/os-upper-constraints.txt
	# use same libvirt version as debian:
	sed -i 's/^libvirt-python===.*/libvirt-python===3.0.0/' $(PIPINSTDIR)/os-upper-constraints.txt
	cp debian/additional-packages.txt                    $(PIPINSTDIR)/additional-packages.txt
	#pip download -d $(PIPINSTDIR)/cache -r $(PIPINSTDIR)/os-upper-constraints.txt
	#pip download -d $(PIPINSTDIR)/cache -r $(PIPINSTDIR)/additional-packages.txt
	# build wheels instead of download
	# first build scipy
	( unset LDFLAGS; unset FFLAGS;  pip wheel -w $(PIPINSTDIR)/cache -f $(PIPINSTDIR)/cache --use-wheel  -c $(PIPINSTDIR)/os-upper-constraints.txt scipy )
	pip wheel -w $(PIPINSTDIR)/cache -f $(PIPINSTDIR)/cache --use-wheel  -r $(PIPINSTDIR)/os-upper-constraints.txt
	pip wheel -w $(PIPINSTDIR)/cache -f $(PIPINSTDIR)/cache --use-wheel  -r $(PIPINSTDIR)/additional-packages.txt
	# install patch script
	mkdir -p $(CURDIR)/debian/os-requirements-$(MAJREL)-builddep/usr/sbin
	cp $(CURDIR)/debian/patch-venv.sh $(CURDIR)/debian/os-requirements-$(MAJREL)-builddep/usr/sbin/patch-venv-$(MAJREL).sh
	# copy some helper scripts
	cp -r debian/helpers   $(PIPINSTDIR)/
